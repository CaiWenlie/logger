!(function (t, e) {
    'object' == typeof exports && 'object' == typeof module
        ? (module.exports = e())
        : 'function' == typeof define && define.amd
        ? define([], e)
        : 'object' == typeof exports
        ? (exports.tsDemo = e())
        : (t.tsDemo = e());
})(this, function () {
    return (function (t) {
        var e = {};
        function o(n) {
            if (e[n]) return e[n].exports;
            var r = (e[n] = { i: n, l: !1, exports: {} });
            return t[n].call(r.exports, r, r.exports, o), (r.l = !0), r.exports;
        }
        return (
            (o.m = t),
            (o.c = e),
            (o.d = function (t, e, n) {
                o.o(t, e) ||
                    Object.defineProperty(t, e, { enumerable: !0, get: n });
            }),
            (o.r = function (t) {
                'undefined' != typeof Symbol &&
                    Symbol.toStringTag &&
                    Object.defineProperty(t, Symbol.toStringTag, {
                        value: 'Module',
                    }),
                    Object.defineProperty(t, '__esModule', { value: !0 });
            }),
            (o.t = function (t, e) {
                if ((1 & e && (t = o(t)), 8 & e)) return t;
                if (4 & e && 'object' == typeof t && t && t.__esModule)
                    return t;
                var n = Object.create(null);
                if (
                    (o.r(n),
                    Object.defineProperty(n, 'default', {
                        enumerable: !0,
                        value: t,
                    }),
                    2 & e && 'string' != typeof t)
                )
                    for (var r in t)
                        o.d(
                            n,
                            r,
                            function (e) {
                                return t[e];
                            }.bind(null, r)
                        );
                return n;
            }),
            (o.n = function (t) {
                var e =
                    t && t.__esModule
                        ? function () {
                              return t.default;
                          }
                        : function () {
                              return t;
                          };
                return o.d(e, 'a', e), e;
            }),
            (o.o = function (t, e) {
                return Object.prototype.hasOwnProperty.call(t, e);
            }),
            (o.p = ''),
            o((o.s = 0))
        );
    })([
        function (t, e, o) {
            'use strict';
            o.r(e);
            var n = (function () {
                function t(t) {
                    var e = t.id,
                        o = t.localStorageFallback,
                        n = t.maxRecords;
                    (this.useIndexedDB = !!window.indexedDB),
                        (this.canUse =
                            !!window.indexedDB || !!window.localStorage),
                        (this.records = []),
                        console.log(e, o),
                        n && (this.maxRecords = n),
                        this.useIndexedDB && this.initIndexedDB(e);
                }
                return (
                    (t.prototype.save = function (t) {
                        console.log(t);
                    }),
                    (t.prototype.initIndexedDB = function (t) {
                        void 0 === t && (t = ''), console.log(t);
                    }),
                    t
                );
            })();
            function r() {
                for (var t = [], e = 0; e < 36; e++)
                    t[e] = '0123456789abcdef'.substr(
                        Math.floor(16 * Math.random()),
                        1
                    );
                return (
                    (t[14] = '4'),
                    (t[19] = '0123456789abcdef'.substr((3 & t[19]) | 8, 1)),
                    (t[8] = '-'),
                    (t[13] = '-'),
                    (t[18] = '-'),
                    (t[23] = '-'),
                    t.join('')
                );
            }
            function i(t) {
                return t < 10 ? '0' + t : t;
            }
            var a = function () {
                    return (a =
                        Object.assign ||
                        function (t) {
                            for (var e, o = 1, n = arguments.length; o < n; o++)
                                for (var r in (e = arguments[o]))
                                    Object.prototype.hasOwnProperty.call(
                                        e,
                                        r
                                    ) && (t[r] = e[r]);
                            return t;
                        }).apply(this, arguments);
                },
                s = (function () {
                    function t(t) {
                        var e = t.id,
                            o = t.localStorageFallback,
                            i = t.baseInfo,
                            a = t.useConsole,
                            s = void 0 === a || a,
                            u = t.useStore,
                            d = void 0 === u || u,
                            c = t.maxRecords;
                        if (
                            ((this.baseInfo = {
                                uid: '',
                                traceid: r(),
                                network: '',
                                url: window.location.href,
                            }),
                            !e)
                        )
                            throw new Error('Logger id is required');
                        (this.useConsole = s),
                            d &&
                                (this.store = new n({
                                    id: e,
                                    localStorageFallback: o,
                                    maxRecords: c,
                                })),
                            i ? this.injectBaseInfo(i) : this.initUid();
                    }
                    return (
                        (t.prototype.initUid = function () {
                            var t = 'tc_logger_uid';
                            if (this.baseInfo.uid)
                                window.localStorage.setItem(
                                    t,
                                    this.baseInfo.uid
                                );
                            else {
                                var e = window.localStorage.getItem(t);
                                e ||
                                    ((e = r()),
                                    window.localStorage.setItem(t, e)),
                                    (this.baseInfo.uid = e);
                            }
                        }),
                        (t.prototype.injectBaseInfo = function (t) {
                            Object.assign(this.baseInfo, t), this.initUid();
                        }),
                        (t.prototype.log = function (t, e) {
                            var o = this.buildLogData(t, e),
                                n = this.dataToLogString(o);
                            this.useConsole && console.log(n, o);
                        }),
                        (t.prototype.error = function (t, e) {
                            var o = this.buildLogData(t, e, 'error'),
                                n = this.dataToLogString(o);
                            this.useConsole && console.error(n, o);
                        }),
                        (t.prototype.download = function () {}),
                        (t.prototype.onReport = function () {}),
                        (t.prototype.filter = function () {}),
                        (t.prototype.refreshTraceId = function () {
                            this.baseInfo.traceid = r();
                        }),
                        (t.prototype.buildLogData = function (t, e, o) {
                            void 0 === o && (o = 'log');
                            var n = new Date(),
                                r = n.getTime(),
                                s = (function (t) {
                                    var e =
                                            t.getFullYear() +
                                            '-' +
                                            i(t.getMonth() + 1) +
                                            '-' +
                                            i(t.getDate()),
                                        o = t.getMilliseconds(),
                                        n = o < 100 ? '0' + i(o) : o;
                                    return (
                                        e +
                                        ' ' +
                                        i(t.getHours()) +
                                        ':' +
                                        i(t.getMinutes()) +
                                        ':' +
                                        i(t.getSeconds()) +
                                        ':' +
                                        n
                                    );
                                })(n);
                            return a(a({}, this.baseInfo), {
                                msg: t,
                                payload: e,
                                type: o,
                                timestamp: r,
                                time: s,
                            });
                        }),
                        (t.prototype.dataToLogString = function (t) {
                            var e =
                                    void 0 !== t.payload
                                        ? ' payload=' +
                                          (function (t) {
                                              if (
                                                  t instanceof
                                                  window.HTMLElement
                                              ) {
                                                  for (
                                                      var e = t.attributes,
                                                          o = '',
                                                          n = 0;
                                                      n < e.length;
                                                      n++
                                                  ) {
                                                      var r = e[n];
                                                      o +=
                                                          ' ' +
                                                          r.name +
                                                          '="' +
                                                          r.value +
                                                          '"';
                                                  }
                                                  return (
                                                      '<' +
                                                      t.tagName.toLowerCase() +
                                                      o +
                                                      '/>'
                                                  );
                                              }
                                              return 'object' == typeof t
                                                  ? JSON.stringify(t)
                                                  : t.toString();
                                          })(t.payload) +
                                          ';'
                                        : '',
                                o = t.network
                                    ? ' network=' + t.network + ';'
                                    : '';
                            return (
                                '[' +
                                t.time +
                                ']:' +
                                ('error' === t.type ? '[error]' : '') +
                                ' msg=' +
                                t.msg +
                                '; uid=' +
                                t.uid +
                                '; traceid=' +
                                t.traceid +
                                o +
                                e
                            );
                        }),
                        t
                    );
                })();
            e.default = { Logger: s };
        },
    ]).default;
});
